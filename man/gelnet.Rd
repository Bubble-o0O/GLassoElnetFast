% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gelnet.R
\name{gelnet}
\alias{gelnet}
\title{Gelnet Function}
\usage{
gelnet(
  S,
  lambda,
  alpha,
  zero = NULL,
  Theta = NULL,
  W = NULL,
  Target = NULL,
  outer.maxit = 1000,
  outer.thr = 1e-05,
  inner.maxit = 1000,
  inner.thr = outer.thr,
  penalize.diagonal = TRUE,
  active = FALSE
)
}
\arguments{
\item{S}{Sample covariance matrix: symmetric p x p matrix}

\item{lambda}{Penalization parameter: non-negative scalar, symmetric p x p matrix or p-length vector. In the latter case, the penalty matrix has ij-th element sqrt(lambda[i]*lambda[j])}

\item{alpha}{Tuning paremeter: scalar value between 0 and 1. 0 corresponds to ridge (L2) type penalty and 1 corresponds to lasso (L1) type penalty. Values inbetween lead to elastic net type penalties.}

\item{zero}{(Optional) Indices of entries of precision matrix to be constrained to be zero. The input should be a matrix with two columns, each row indicating the indices of elements to be constrained to be zero. The solution must be symmetric, so you need only specify one of (i,j) and (j,i). An entry in the zero matrix overrides any entry in the rho matrix for a given element.}

\item{Theta}{(Optional) Precision matrix warm start: symmetric positive definit p x p matrix used as a warm start. If Theta is too far from the correct solution, the algorithm may no converge.}

\item{W}{(Optional) Covariance matrix warm start: symmetric positive definit p x p matrix used as a warm start. If W is too far from the correct solution, the algorithm may no converge.}

\item{Target}{(Optional) Target matrix: non-negative diagonal p x p matrix.}

\item{outer.maxit}{Maximal number of iterations for outer loop. Default is set to 1000.}

\item{outer.thr}{Threshold for convergence of the outer loop. Default is set to 1e-5.  Iterations stop when average absolute parameter change is less than outer.thr*average(abs(offdiag(S)))}

\item{inner.maxit}{Maximal number of iterations for inner loop. Default is set to 1000.}

\item{inner.thr}{Threshold for inner loop. Default is equal to outer.thr.}

\item{penalize.diagonal}{Should the diagonal of Theta be penalized. Default is set to TRUE.}

\item{active}{Should an active set of variables in the inner loop be used to increase computational speed. Default is set to FALSE.}
}
\value{
A list with the following
\item{Theta}{Estimated precision matrix}
\item{W}{Estimated covariance matrix}
\item{niter}{Number of iterations of outer.loop used.}
\item{del}{Change in parameter value at convergence.}
\item{conv}{Returns if the algorithm converged before reaching the maximal number of outer iterations}
}
\description{
Estimates a sparse precision matrix Theta and the corresponding covariance matrix W using an elastic net type penalty.
}
\examples{
\donttest{
set.seed(1)
n <- 10
p <- 5
Y <- array(rnorm(n*p),dim=c(n,p)) # data-matrix
S <- (nrow(Y) - 1) / nrow(Y) * cov(Y) # sample covariance matrix
object <- gelnet(S=S,lambda=0.5,alpha=0.5)
}
}
\references{
Jerome Friedman, Trevor Hastie and Rob Tibshirani (2019).
Graphical Lasso: Estimation of Gaussian Graphical Models.
CRAN. http://www-stat.stanford.edu/~tibs/glasso
}
